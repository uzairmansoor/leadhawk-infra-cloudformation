AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to deploy Lambda function
Parameters:
  project:
    Type: String
    Default: leadhawk
    Description: Project Name
  env:
    Type: String
    Default: dev
    AllowedValues: [prod, dev, qa, stage]
    Description: Environment Name
  app:
    Type: String
    Default: app
    Description: Application Name
  lambdaDescription:
    Type: String
    Description: The description of lambda function
  lambdaPackageType:
    Type: String
    Default: Zip
    AllowedValues: [Image, Zip]
    Description: Type of deployment package
  lambdaExecutionRoleArn:
    Type: String
    Description: The ARN of the IAM role for Lambda execution
  lambdaRuntime:
    Type: String
    Description: The version of the runtime for the Lambda function
  lambdaHandler:
    Type: String
    Description: The name of the method within your code that Lambda calls to run your function
  lambdaEphemeralStorageSize:
    Type: Number
    Default: 512
    Description: The amount of ephemeral storage size available to the function at runtime
  lambdaMemorySize:
    Type: Number
    Default: 128
    Description: The amount of memory available to the function at runtime
  lambdaTimeout:
    Type: Number
    Default: 30
    Description: The amount of time (in seconds) that Lambda allows a function to run before stopping it
  lambdaSecurityGroup:
    Type: String
    Default: ""
    Description: A list of VPC security group IDs
  deployInVPC:
    Type: String
    Default: True
    AllowedValues: [True, False]
    Description: Set to 'True' if the Lambda function should be deployed in a VPC
  privateSubnet01:
    Type: String
    Description: Private Subnet 1 Id
  privateSubnet02:
    Type: String
    Description: Private Subnet 2 Id
  s3BucketName:
    Type: String
    Default: ""
    Description: The S3 bucket name where the Lambda code is stored. Leave empty if using an ECR image
  s3ObjectKey:
    Type: String
    Default: ""
    Description: The S3 key of the deployment package
  ecrRepositoryUri:
    Type: String
    Default: ""
    Description: The URI of ECR repository
  ecrImageTag:
    Type: String
    Default: ""
    Description: The tag of the Docker image hosted on ECR
Conditions:
  useZipPackageType: !Equals [!Ref lambdaPackageType, "Zip"]
  schedulerLambdaFunc: [!Equals [!Ref app, "scheduler"]]
  useVpcConfig: !Equals [!Ref deployInVPC, True]
Resources:
  lambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: !Ref lambdaDescription
      FunctionName: !Sub "${project}-${env}-${app}-lambdaFunction"
      PackageType: !Ref lambdaPackageType
      Role: !Ref lambdaExecutionRoleArn
      Runtime: !If
        - useZipPackageType
        - !Ref lambdaRuntime
        - !Ref "AWS::NoValue"
      Handler: !If
        - useZipPackageType
        - !Ref lambdaHandler
        - !Ref "AWS::NoValue"
      EphemeralStorage:
        Size: !Ref lambdaEphemeralStorageSize
      MemorySize: !Ref lambdaMemorySize
      Timeout: !Ref lambdaTimeout
      VpcConfig:
        !If 
          - useVpcConfig
          - 
            SecurityGroupIds:
              - !Ref lambdaSecurityGroup
            SubnetIds:
              - !Ref privateSubnet01
              - !Ref privateSubnet02
          - !Ref "AWS::NoValue"
      ImageConfig:
        !If
          - useZipPackageType
          - !Ref "AWS::NoValue"
          - 
            Command:
              - dist/index.handler
      Code:
        !If
          - useZipPackageType
          - S3Bucket: !Ref s3BucketName
            S3Key: !Ref s3ObjectKey
          - ImageUri: !Sub ${ecrRepositoryUri}:${ecrImageTag}
      Environment:
        Variables: !If
          - schedulerLambdaFunc
          - 
            APP_ENV: prod
            SENTRY_DSN: https://b05f911bcf08d424d9c55992562f0e19@o4507299659644928.ingest.us.sentry.io/4507345529864192
            SENTRY_ENV: prod
            MONGODB_URI: mongodb+srv://jackpete1228:LeadHawk@cluster0.bfxtoqi.mongodb.net/hawkio?retryWrites=true&w=majority
            SMTP_HOST: smtp.office365.com
            SMTP_PORT: "587"
            SMTP_USERNAME: noreply@leadhawk.io
            SMTP_PASSWORD: vnfmvbrhxnjlzkmx
            EMAIL_FROM: noreply@leadhawk.io
            LEADHAWK_BASE: https://app.leadhawk.io
            LEADHAWK_LOGIN: https://app.leadhawk.io/auth
            LEADHAWK_PRIVACY: https://app.termly.io/policy-viewer/policy.html?policyUUID=852ab584-9ca6-4bbf-9df5-3daeb410d211
            LEADHAWK_HELP: https://app.leadhawk.io
            LEADHAWK_UPGRADE_NOW: https://app.leadhawk.io/pricingTable
            LEADHAWK_REACTIVATE_ACCOUNT: "#"
          - !Ref "AWS::NoValue"
Outputs:
  lambdaFunctionName:
    Description: Name of lambda function
    Value: !Ref lambdaFunction
    Export:
      Name: !Sub "${project}-${env}-${app}-lambdaFunctionName-${AWS::Region}"
  lambdaFunctionArn:
    Description: Arn of lambda function
    Value: !GetAtt lambdaFunction.Arn
    Export:
      Name: !Sub "${project}-${env}-${app}-lambdaFunctionArn-${AWS::Region}"