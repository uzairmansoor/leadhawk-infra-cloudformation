AWSTemplateFormatVersion: "2010-09-09"
Description: Cloudformation template to create S3 buckets
Parameters:
  project:
    Type: String
    Default: leadhawk
    Description: Project Name
  env:
    Type: String
    Default: dev
    AllowedValues: [prod, dev, qa, stage]
    Description: Environment Name
  app:
    Type: String
    Default: app
    Description: Application Name
  # s3BucketName:
  #   Type: String
  #   Description: Name of s3 bucket
  s3BucketAccessControl:
    Type: String
    Default: Public
    AllowedValues: [Private, Public]
    Description:  The predefined permissions to the bucket
  s3VersioningStatus:
    Type: String
    Default: Enabled
    AllowedValues: [Enabled , Suspended]
    Description: Select Enabled to enable the S3 versioning status and Suspended to disable the S3 versioning status
  s3ObjectOwnership:
    Type: String
    Default: BucketOwnerPreferred
    AllowedValues: [BucketOwnerEnforced , ObjectWriter, BucketOwnerPreferred]
    Description: Object Ownership rule
  sseAlgorithm:
    Type: String
    Description: Server side encryption algortihm
  indexDocument:
    Type: String
    Default: index.html
    Description: Name of the index document for the website
  errorDocument:
    Type: String
    Default: error.html
    Description: Name of the error document for the website
  enableWebsiteConfiguration:
    Type: String
    Default: yes
    AllowedValues: [yes, no]
    Description: Enable website configuration or not
  enableCfWritePolicy:
    Type: String
    Default: yes
    AllowedValues: [yes, no]
    Description: Enable CloudFront write policy or not
  enableS3BucketPolicy:
    Type: String
    Default: yes
    AllowedValues: [yes, no]
    Description: Enable S3 bucket policy for s3 media artifacts bucket or not
Conditions:
  isEnableCfWritePolicy: !Equals [!Ref enableCfWritePolicy, yes ]
  isEnableS3BucketPolicy: !Equals [!Ref enableS3BucketPolicy, yes ]
  isEnableWebsiteConfiguration: !Equals [!Ref enableWebsiteConfiguration, yes ]
Resources:
  s3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${project}-${env}-${app}-${AWS::Region}-${AWS::AccountId}"
      AccessControl: !Ref s3BucketAccessControl
      VersioningConfiguration:
        Status: !Ref s3VersioningStatus 
      OwnershipControls:
        Rules:
          - ObjectOwnership: !Ref s3ObjectOwnership
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref sseAlgorithm
      WebsiteConfiguration: !If
        - isEnableWebsiteConfiguration
        - IndexDocument: !Ref indexDocument
          ErrorDocument: !Ref errorDocument
        - !Ref "AWS::NoValue"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      Tags:
        - Key: Name
          Value: !Sub "${project}-${env}-${app}-${AWS::Region}-${AWS::AccountId}"
        - Key: project
          Value: !Ref project
        - Key: environment
          Value: !Ref env
  s3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: isEnableS3BucketPolicy
    Properties:
      Bucket: !Ref s3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
            Principal:
              AWS: "*"
            Resource:
              - !GetAtt s3Bucket.Arn
              - !Sub "${s3Bucket.Arn}/*"
  # writeAccessPolicyCloudFront:
  #   Type: AWS::S3::BucketPolicy
  #   Condition: isEnableCfWritePolicy
  #   Properties:
  #     Bucket: !Ref s3Bucket
  #     PolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Sid: Allow cloud front to write logs to an s3 bucket
  #           Effect: Allow
  #           Action:
  #             - s3:GetBucketAcl
  #             - s3:PutObject
  #           Principal:
  #             Service: delivery.logs.amazonaws.com
  #           Resource:
  #             - !Sub "arn:aws:s3:::${s3Bucket}"
  #             - !Sub "arn:aws:s3:::${s3Bucket}/*"
Outputs:
  s3Bucket:
    Value: !Ref s3Bucket
    Export:
      Name: !Sub "${project}-${env}-${app}-s3Bucket-${AWS::Region}"
  s3BucketArn:
    Value: !GetAtt s3Bucket.Arn
    Export:
      Name: !Sub "${project}-${env}-${app}-s3BucketArn-${AWS::Region}"
  s3BucketDomainName:
    Value: !GetAtt s3Bucket.DomainName
    Export:
      Name: !Sub "${project}-${env}-${app}-s3BucketDomainName-${AWS::Region}"