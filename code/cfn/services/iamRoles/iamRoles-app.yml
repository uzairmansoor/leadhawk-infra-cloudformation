AWSTemplateFormatVersion: "2010-09-09"
Description: 'CloudFormation Template to deploy IAM policies and roles'
Parameters:
  project:
    Type: String
    Default: leadhawk
    Description: Project Name
  env:
    Type: String
    Default: dev
    AllowedValues: [prod, dev, qa, stage]
    Description: Environment Name
  app:
    Type: String
    Default: app
    Description: Application Name
Resources:
  restrictDefaultSgRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${project}-${env}-${app}-lambdaExecRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: !Sub "${project}-${env}-${app}-ec2SecurityGroupPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupEgress
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:security-group/*
  ec2InstanceIamRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${project}-${env}-${app}-ec2InstanceIamRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
      Policies:
        - PolicyName: !Sub "${project}-${env}-${app}-ec2CloudFormationPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStackResource
                  - cloudformation:SignalResource
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/*/*
        - PolicyName: !Sub "${project}-${env}-${app}-ec2InstancePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeInstances
                  - ecr:BatchCheckLayerAvailability
                  - ecr:BatchGetImage
                  - ecr:DescribeImages
                  - ecr:GetAuthorizationToken
                  - ecr:GetDownloadUrlForLayer
                  - ecr:ListImages
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - "*"
  ec2InstancIamProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub "${project}-${env}-${app}-ec2InstancIamProfile"
      Path: /
      Roles: 
        - !Ref ec2InstanceIamRole
Outputs:
  restrictDefaultSgRoleArn:
    Description: The ARN of the Lambda execution role for restricting the default security group
    Value: !GetAtt restrictDefaultSgRole.Arn
    Export:
      Name: !Sub "${project}-${env}-${app}-restrictDefaultSgRoleArn-${AWS::Region}"
  ec2InstanceIamRoleArn:
    Description: The ARN of the EC2 instance role
    Value: !GetAtt ec2InstanceIamRole.Arn
    Export:
      Name: !Sub "${project}-${env}-${app}-ec2InstanceIamRoleArn-${AWS::Region}"
  ec2InstanceIamProfileName:
    Description: The name of the EC2 instance profile
    Value: !Ref ec2InstancIamProfile
    Export:
      Name: !Sub "${project}-${env}-${app}-ec2InstanceIamProfileName-${AWS::Region}"