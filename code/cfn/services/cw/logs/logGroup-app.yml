AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template to deploy cloudwatch logs
Parameters:
  project:
    Type: String
    Default: leadhawk
    Description: Project Name
  env:
    Type: String
    Default: dev
    AllowedValues: [prod, dev, qa, stage]
    Description: Environment Name
  app:
    Type: String
    Default: app
    Description: Application Name
Resources:
  cwDataEntryLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "${project}-${env}-dataEntry-cwLogGroup"
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  cwAdminLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "${project}-${env}-admin-cwLogGroup"
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  cwUserLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "${project}-${env}-user-cwLogGroup"
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  cwFilterLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "${project}-${env}-filter-cwLogGroup"
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  cwLambdaSchedulerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "${project}-${env}-lambdaScheduler-cwLogGroup"
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
Outputs:
  cwDataEntryLogGroupName:
    Description: CloudWatch log group name for data entry
    Value: !Ref cwDataEntryLogGroup
    Export:
      Name: !Sub "${project}-${env}-dataEntry-cwLogGroupName-${AWS::Region}"
  # cwDataEntryLogGroupArn:
  #   Description: CloudWatch log group ID for data entry
  #   Value: !GetAtt cwDataEntryLogGroup.Arn
  #   Export:
  #     Name: !Sub "${project}-${env}-dataEntry-cwLogGroupArn-${AWS::Region}"
  cwAdminLogGroupName:
    Description: CloudWatch log group name for admin
    Value: !Ref cwAdminLogGroup
    Export:
      Name: !Sub "${project}-${env}-admin-cwLogGroupName-${AWS::Region}"
  # cwAdminLogGroupArn:
  #   Description: CloudWatch log group ID for data entry
  #   Value: !GetAtt cwAdminLogGroup.Arn
  #   Export:
  #     Name: !Sub "${project}-${env}-admin-cwLogGroupArn-${AWS::Region}"
  cwUserLogGroupName:
    Description: CloudWatch log group name for user
    Value: !Ref cwUserLogGroup
    Export:
      Name: !Sub "${project}-${env}-user-cwLogGroupName-${AWS::Region}"
  # cwUserLogGroupArn:
  #   Description: CloudWatch log group ID for data entry
  #   Value: !GetAtt cwUserLogGroup.Arn
  #   Export:
  #     Name: !Sub "${project}-${env}-user-cwLogGroupArn-${AWS::Region}"
  cwFilterLogGroupName:
    Description: CloudWatch log group name for filter
    Value: !Ref cwFilterLogGroup
    Export:
      Name: !Sub "${project}-${env}-filter-cwLogGroupName-${AWS::Region}"
  cwLambdaSchedulerLogGroupName:
    Description: CloudWatch log group name for lambda scheduler
    Value: !Ref cwLambdaSchedulerLogGroup
    Export:
      Name: !Sub "${project}-${env}-lambdaScheduler-cwLogGroupName-${AWS::Region}"
  # cwLambdaSchedulerLogGroupArn:
  #   Description: CloudWatch log group ID for data entry
  #   Value: !GetAtt cwLambdaSchedulerLogGroup.Arn
  #   Export:
  #     Name: !Sub "${project}-${env}-lambdaScheduler-cwLogGroupArn-${AWS::Region}"