AWSTemplateFormatVersion: "2010-09-09"
Description: 'CloudFormation Template to deploy IAM policies and roles'
Parameters:
  project:
    Type: String
    Default: leadhawk
    Description:  Project Name
  env:
    Type: String
    Default: dev
    AllowedValues: [prod, dev, qa, stage]
    Description:  Environment Name
  app:
    Type: String
    Default: app
    Description: Name of the app
Resources:
  lambdaExecRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${project}-${env}-${app}-lambdaExecRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEventBridgeSchedulerFullAccess
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
      Policies:
        - PolicyName: !Sub "${project}-${env}-${app}-secretsManagerPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                  - secretsmanager:ListSecrets
                Resource:
                  - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*"
  
  CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupEgress
                Resource:
                  - Fn::Join:
                      - ""
                      - - "arn:aws:ec2:us-east-1:"
                        - Ref: AWS::AccountId
                        - ":security-group/"
                        - Fn::GetAtt:
                            - LeadHawkVpc2B8103F5
                            - DefaultSecurityGroup
Outputs:
  lambdaExecRoleArn:
    Description: Name of lambda execution role
    Value: !GetAtt lambdaExecRole.Arn
    Export:
      Name: !Sub "${project}-${env}-${app}-lambdaExecRoleArn-${AWS::Region}"