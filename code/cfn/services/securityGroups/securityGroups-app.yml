AWSTemplateFormatVersion: "2010-09-09"
Description: Template to create the Security Groups
Parameters:
  project:
    Type: String
    Default: leadhawk
    Description:  Project Name
  env:
    Type: String
    Default: dev
    AllowedValues: [prod, dev, qa, stage]
    Description:  Environment Name
  app:
    Type: String
    Default: app
    Description:  Application Name    
  restrictDefaultSgLambdaFunctionArn:
    Type: String
    Description:  The ARN of the Lambda execution role for restricting the default security group
  defaultSecurityGroupId:
    Type: String
    Description: Default security group ID of the VPC
  vpcId:
    Type: String
    Description: ID of the VPC for the security group
Resources:
  sgDefaultVpcRestrict:
    Type: Custom::VpcRestrictDefaultSG
    Properties:
      ServiceToken: !Ref restrictDefaultSgLambdaFunctionArn
      DefaultSecurityGroupId: !Ref defaultSecurityGroupId
      Account: !Ref AWS::AccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  sgAlb:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group of ALB
      GroupName: albSecurityGroups
      VpcId: !Ref vpcId
      Tags:
        - Key: Name
          Value: !Sub "${project}-${env}-sgAlb-${AWS::Region}"
        - Key: project
          Value: !Ref project
        - Key: environment
          Value: !Ref env
  sgAlbEgressAllTraffic:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow all outbound traffic by default
      GroupId: !Ref sgAlb
      CidrIp: 0.0.0.0/0
      IpProtocol: "-1"
  sgAlbIngressHttp:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allows HTTP ingress traffic from any IP address
      GroupId: !Ref sgAlb
      FromPort: 80
      ToPort: 80
      IpProtocol: tcp
      CidrIp: 0.0.0.0/0
  sgAlbIngressHttps:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allows HTTPS ingress traffic from any IP address
      GroupId: !Ref sgAlb
      FromPort: 443
      ToPort: 443
      IpProtocol: tcp
      CidrIp: 0.0.0.0/0
  sgEc2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group of EC2
      GroupName: ec2SecurityGroups
      VpcId: !Ref vpcId
      Tags:
        - Key: Name
          Value: !Sub "${project}-${env}-sgEc2-${AWS::Region}"
        - Key: project
          Value: !Ref project
        - Key: environment
          Value: !Ref env
  sgEc2EgressAllTraffic:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow all outbound traffic by default
      GroupId: !Ref sgEc2
      CidrIp: 0.0.0.0/0
      IpProtocol: "-1"
  sgEc2IngressHttp:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow HTTP traffic from Application Load Balancer
      GroupId: !Ref sgEc2
      FromPort: 80
      ToPort: 80
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref sgAlb
  sgEc2IngressHttps:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow HTTPS traffic from Application Load Balancer
      GroupId: !Ref sgEc2
      FromPort: 443
      ToPort: 443
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref sgAlb
  sgEc2IngressSshSpaceX:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow SSH traffic from Space X IP address
      GroupId: !Ref sgEc2
      CidrIp: 45.64.221.200/32
      FromPort: 22
      ToPort: 22
      IpProtocol: tcp
  sgEc2IngressSshSpace360:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow SSH traffic from Space 360 IP address
      GroupId: !Ref sgEc2
      CidrIp: 14.194.112.178/32
      FromPort: 22
      ToPort: 22
      IpProtocol: tcp
  sgEc2IngressSshInstanceConnect:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: EC2 Instance Connect
      GroupId: !Ref sgEc2
      CidrIp: 18.206.107.24/29
      FromPort: 22
      ToPort: 22
      IpProtocol: tcp
  sgEc2IngressEC2InstanceConnect:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow SSH traffic from Groff Orlando IP address
      GroupId: !Ref sgEc2
      CidrIp: 99.137.183.60/32
      FromPort: 22
      ToPort: 22
      IpProtocol: tcp
  sgEc2ConnectEndpoint:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "${project}-${env}-${app}-sgEc2ConnectEndpoint"
      VpcId: !Ref vpcId
      Tags:
        - Key: Name
          Value: !Sub "${project}-${env}-${app}-sgEc2ConnectEndpoint"
        - Key: project
          Value: !Ref project
        - Key: environment
          Value: !Ref env
        - Key: app
          Value: !Ref app
  sgEc2ConnectEndpointEgressAllTraffic:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow all outbound traffic by default
      GroupId: !Ref sgEc2ConnectEndpoint
      CidrIp: 0.0.0.0/0
      IpProtocol: "-1"
  sgEc2ConnectEndpointSshIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allows SSH ingress traffic from any IP address
      GroupId: !Ref sgEc2ConnectEndpoint
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0
Outputs:
  sgDefaultVpcRestrict:
    Description: A custom resource to restrict the default security group for the specified VPC
    Value: !Ref sgDefaultVpcRestrict
    Export:
      Name: !Sub "${project}-${env}-${app}-sgDefaultVpcRestrict-${AWS::Region}"
  sgAlbId:
    Description: ALB Security Group ID
    Value: !Ref sgAlb
    Export:
      Name: !Sub "${project}-${env}-${app}-sgAlbId-${AWS::Region}"
  sgEc2Id:
    Description: EC2 Security Group ID
    Value: !Ref sgEc2
    Export:
      Name: !Sub "${project}-${env}-${app}-sgEc2Id-${AWS::Region}"
  sgEc2ConnectEndpointId:
    Description: EC2 Connect endpoint Security Group ID
    Value: !Ref sgEc2ConnectEndpoint
    Export:
      Name: !Sub "${project}-${env}-${app}-sgEc2ConnectEndpointId-${AWS::Region}"